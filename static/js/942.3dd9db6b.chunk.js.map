{"version":3,"file":"static/js/942.3dd9db6b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n\n  (filtered, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtered.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 10px;\n  /* max-width: 350px; */\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 320px;\n  height: 30px;\n  padding-left: 15px;\n  padding-right: 15px;\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  outline: rgba(0, 0, 0, 0);\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 35px;\n\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Form } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.some(\n        event =>\n          event.name.toLowerCase() === name.toLowerCase() &&\n          event.number === number\n      )\n    ) {\n      alert(`${name}: ${number} is already in contacts!`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Box>\n        <TextField\n          id=\"fullWidth\"\n          label=\"Name\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Павло Ніколащук\"\n          required\n        />\n      </Box>\n\n      <Box>\n        <TextField\n          id=\"fullWidth\"\n          label=\"Number\"\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"+380-00-000-0000\"\n          required\n        />\n      </Box>\n\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nimport { setQueryFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(setQueryFilter(event.target.value));\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap=\"10px\" marginTop=\"20px\">\n      <TextField\n        id=\"fullWidth\"\n        label=\"Find contacts by name\"\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Павло Ніколащук\"\n        required\n      />\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nimport { deleteContact, editContact } from 'redux/operations';\n\nexport default function ContactListItem({ id, name, number }) {\n  const [editedName, setEditedName] = useState(name);\n  const [editedNumber, setEditedNumber] = useState(number);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleEditContact = () => {\n    if (!isEdit) {\n      setIsEdit(true);\n      return;\n    }\n\n    setIsEdit(false);\n    setEditedName(editedName);\n    setEditedNumber(editedNumber);\n\n    dispatch(\n      editContact({\n        id,\n        name: editedName,\n        number: editedNumber,\n      })\n    );\n  };\n\n  return (\n    <>\n      {isEdit ? (\n        <>\n          <TextField\n            variant=\"standard\"\n            label=\"Name: \"\n            name=\"name\"\n            type=\"text\"\n            value={editedName}\n            onChange={event => setEditedName(event.target.value)}\n          />\n\n          <TextField\n            variant=\"standard\"\n            label=\"Number: \"\n            name=\"number\"\n            type=\"text\"\n            value={editedNumber}\n            onChange={event => setEditedNumber(event.target.value)}\n          />\n        </>\n      ) : (\n        <p>\n          {name}: {number}\n        </p>\n      )}\n\n      <div>\n        {isEdit ? (\n          <Button type=\"button\" variant=\"outlined\" disabled>\n            Delete\n          </Button>\n        ) : (\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </Button>\n        )}\n\n        <Button type=\"button\" variant=\"outlined\" onClick={handleEditContact}>\n          {isEdit ? 'Save' : 'Edit'}\n        </Button>\n      </div>\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport default function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} style={{ paddingBottom: 12 }}>\n            <ContactListItem id={id} name={name} number={number} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '@mui/material/Container';\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1 style={{ marginTop: 20 }}>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      {isLoading && !error && <p style={{ textAlign: 'center' }}>Loading...</p>}\n\n      {contacts.length === 0 && !isLoading ? (\n        <p style={{ textAlign: 'center' }}>You don't have any contacts yet</p>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filtered","contact","name","toLowerCase","includes","Form","styled","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","some","alert","addContact","Box","TextField","id","label","type","onChange","pattern","title","placeholder","required","Button","variant","Filter","display","alignItems","gap","marginTop","setQueryFilter","target","ContactListItem","editedName","setEditedName","editedNumber","setEditedNumber","isEdit","setIsEdit","disabled","onClick","deleteContact","editContact","ContactList","visibleContacts","map","style","paddingBottom","ContactsPage","useEffect","fetchContacts","Container","textAlign","length"],"sourceRoot":""}